import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class GameController {

    public static final String MAVI = "ğŸ”µ";
    public static final String SARI = "ğŸŸ¡";
    public static final String KIRMIZI = "ğŸ”´";
    public static final String YESIL = "ğŸŸ¢";

    public static final String FLIP_CARD = "+/-";
    public static final String DOUBLE_CARD = "x2";


    public static void main(String[] args) {
        Decks decks = new Decks();
        Scanner scanner = new Scanner(System.in);

        // Oyuncu ve bilgisayarÄ±n ilk beÅŸ kartÄ±nÄ± al
        Players player = new Players();
        Players computer = new Players();

        dealInitialHands(decks, player, computer);

        // Oyuncu ve bilgisayarÄ±n elini yazdÄ±r
        System.out.println("Oyuncu eli: " + Arrays.toString(player.getHand()));
        //System.out.println("Bilgisayar eli: " + Arrays.toString(computer.getHand2()));
        //bilgisayar elini deneme amaÃ§lÄ± gÃ¶rmek istediÄŸim iÃ§in aÃ§mÄ±ÅŸtÄ±m. Gizledim.
        int userChoice;

        // Oyunumun dÃ¶ngÃ¼sÃ¼
        boolean gameIsRunning = true;

        while (gameIsRunning) {

            userChoice = playerTurn(decks, player, computer, scanner);// Oyuncunun sÄ±rasÄ±

            computerTurn(decks, player, computer);// BilgisayarÄ±n sÄ±rasÄ±

            // Masadaki kartlarÄ± karÅŸÄ±laÅŸtÄ±rmak iÃ§in compareTable metoduna geÃ§iÅŸ.
            player.compareTable(computer, userChoice);

            // Oyuncu ve bilgisayarÄ±n elini yazdÄ±r
            System.out.println("Oyuncu eli: " + Arrays.toString(player.getHand()));

            // Oyunun kontrolÃ¼
            gameIsRunning = !checkGameResult(player, computer);
        }


        //dealInitialHands(decks, player, computer);--> deneme amaÃ§lÄ± aÃ§tÄ±m. Gizledim


        // Yeniden tÃ¼m kartlarÄ± karÄ±ÅŸtÄ±rÄ±p ve oyunculara daÄŸÄ±tma
        decks.reshuffleCards();
        dealInitialHands(decks, player, computer);
    }


    private static void dealInitialHands(Decks decks, Players player, Players computer) {
        // Oyun bittiÄŸinde yeni tur baÅŸlatmak iÃ§in endSet ile masa temizleme
        player.endSet();
        computer.endSet();

        // Oyuncu ve bilgisayarÄ±n ilk 4 kartÄ±nÄ± almasÄ±nÄ± saÄŸlama
        for (int i = 0; i < 4; i++) {
            player.addToHand(decks.drawCard());
            computer.addToHand2(decks.drawCard());
        }
        player.resetHand();//eskiden yazdÄ±rdÄ±ÄŸÄ±m bir metoddan geliyor
        computer.resetHand();//nedenini bilmiyorum ama bu metodu kaldÄ±rdÄ±ÄŸÄ±mda 8 kart veriyor.
        for (int i = 0; i < 4; i++) {
            player.addToHand(decks.drawCard());
            computer.addToHand2(decks.drawCard());
        }
    }

    private static int playerTurn(Decks decks, Players player, Players computer, Scanner scanner) {
        System.out.println("Oyuncunun sÄ±rasÄ±!");
        System.out.println("0 - Kart Ã§ek");
        System.out.println("1 - Kart oyna");
        System.out.println("2 - Seti bitir");

        int userChoice = -1; // BaÅŸta geÃ§ersiz bir seÃ§enek atadÄ±m

        while (true) {
            try {
                userChoice = scanner.nextInt();
                scanner.nextLine();

                switch (userChoice) {
                    case 0:
                        String drawnCard = decks.drawCard();
                        if (drawnCard != null) {
                            System.out.println("Ã‡ekilen kart: " + drawnCard);
                            player.addToHand(drawnCard);
                        } else {
                            System.out.println("Destede kart kalmadÄ±!");
                        }
                        break;
                    case 1:
                        player.printHandWithIndices();
                        System.out.println("Hangi kartÄ± oynamak istiyorsunuz?");
                        int cardIndex = scanner.nextInt();
                        player.placeCardOnTable(cardIndex - 1);
                        break;
                    case 2:
                        System.out.println("Seti bitir!");

                        // Masadaki kartlarÄ± karÅŸÄ±laÅŸtÄ±r
                        player.compareTable(computer, userChoice);

                        dealInitialHands(decks, player, computer); // Yeni tur.
                        break;
                    default:
                        System.out.println("GeÃ§ersiz seÃ§im! Tekrar deneyin.");
                        continue; // GeÃ§ersiz seÃ§im durumunda tekrar dÃ¶ngÃ¼ye devam et
                }

                break; // GeÃ§erli bir seÃ§im yapÄ±ldÄ±ysa dÃ¶ngÃ¼den Ã§Ä±k
            } catch (Exception e) {
                System.out.println("Hata: GeÃ§erli bir sayÄ± giriniz. Tekrar deneyin.");
                scanner.nextLine(); // Buffer temizleme
            }
        }

        return userChoice;
        //Temel olarak bildiÄŸiniz switch-case. Sadece diÄŸer metodlarla olan baÄŸlantÄ±larÄ±
        // ayarlamak zor oldu try-catch kullanmayÄ± araÅŸtÄ±rarak ekledim
    }


    private static void computerTurn(Decks decks, Players player, Players computer) {
        System.out.println("BilgisayarÄ±n sÄ±rasÄ±!");

        // BilgisayarÄ±n elinden bir kartÄ± masaya koymasÄ±nÄ± saÄŸlama
        String drawnCard = decks.drawCard();
        Random random=new Random();
        int a =random.nextInt(2);
        if (a==1){
        //if (drawnCard != null) {
            System.out.println("Bilgisayar masaya kart koydu: " + drawnCard);
            computer.addToTable2(drawnCard);
        } else {
            computer.addToHand2(drawnCard);
            //System.out.println("Destede kart kalmadÄ±");
            System.out.println("Bilgisayar kart Ã§ekti");
        }

        // Masadaki kartlarÄ± karÅŸÄ±laÅŸtÄ±r
        //computer.compareTable(player);BunlarÄ± deneme amaÃ§lÄ± aÃ§tÄ±m sonra gizledim
    }

    private static boolean checkGameResult(Players player, Players computer) {
        if (player.totalScore == 3) {
            System.out.println("Oyuncu oyunu kazandÄ±!");
            return true;
        } else if (computer.totalScore2 == 3) {
            System.out.println("Bilgisayar oyunu kazandÄ±!");
            return true;
        }
        return false;
    }
}
