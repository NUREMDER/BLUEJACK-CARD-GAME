import java.util.Arrays;
import java.util.Scanner;

public class GameController {

    public static final String MAVI = "ğŸ”µ";
    public static final String SARI = "ğŸŸ¡";
    public static final String KIRMIZI = "ğŸ”´";
    public static final String YESIL = "ğŸŸ¢";

    public static final String FLIP_CARD = "+/-";
    public static final String DOUBLE_CARD = "x2";


    public static void main(String[] args) {
        Decks decks = new Decks();
        Scanner sc = new Scanner(System.in);

        // Oyuncu ve bilgisayarÄ±n ilk beÅŸ kartÄ±nÄ± al
        Players player = new Players();
        Players computer = new Players();
        dealInitialHands(decks, player, computer);

        // Oyuncu ve bilgisayarÄ±n elini yazdÄ±r
        System.out.println("Oyuncu eli: " + Arrays.toString(player.getHand()));
        System.out.println("Bilgisayar eli: " + Arrays.toString(computer.getHand2()));

        // Oyun dÃ¶ngÃ¼sÃ¼
        while (true) {
            // Oyuncunun sÄ±rasÄ±
            playerTurn(decks, player, computer, sc);

            // BilgisayarÄ±n sÄ±rasÄ±
            computerTurn(decks, player, computer);

            // Masadaki kartlarÄ± karÅŸÄ±laÅŸtÄ±r
            player.compareTable(computer);

            // Oyuncu ve bilgisayarÄ±n elini yazdÄ±r
            System.out.println("Oyuncu eli: " + Arrays.toString(player.getHand()));
            System.out.println("Bilgisayar eli: " + Arrays.toString(computer.getHand2()));

            // Oyun kontrolÃ¼
            if (checkGameResult(player, computer)) {
                break;
            }
        }
    }

    private static void dealInitialHands(Decks decks, Players player, Players computer) {
        for (int i = 0; i < 4; i++) {
            player.addToHand(decks.drawCard());
            computer.addToHand2(decks.drawCard());
        }
    }

    private static void playerTurn(Decks decks, Players player, Players computer, Scanner sc) {
        System.out.println("Oyuncunun sÄ±rasÄ±!");
        System.out.println("0 - Kart Ã§ek");
        System.out.println("1 - Kart oyna");
        System.out.println("2 - Seti bitir");

        int choice = sc.nextInt();
        sc.nextLine(); // Buffer temizleme

        switch (choice) {
            case 0:
                String drawnCard = decks.drawCard();
                if (drawnCard != null) {
                    System.out.println("Ã‡ekilen kart: " + drawnCard);
                    player.addToHand(drawnCard);
                } else {
                    System.out.println("Destede kart kalmadÄ±!");
                }
                break;
            case 1:
                player.printHandWithIndices();
                System.out.println("Hangi kartÄ± oynamak istiyorsunuz?");
                int cardIndex = sc.nextInt();
                player.placeCardOnTable(cardIndex - 1);
                break;
            case 2:
                System.out.println("Seti bitir!");

                // Masadaki kartlarÄ± karÅŸÄ±laÅŸtÄ±r
                player.compareTable(computer);
                break;
            default:
                System.out.println("GeÃ§ersiz seÃ§im!");
                break;
        }
    }

    private static void computerTurn(Decks decks, Players player, Players computer) {
        System.out.println("BilgisayarÄ±n sÄ±rasÄ±!");

        // BilgisayarÄ±n elinden bir kartÄ± masaya koymasÄ±nÄ± saÄŸla
        String drawnCard = decks.drawCard();
        if (drawnCard != null) {
            System.out.println("Bilgisayar masaya kart koydu: " + drawnCard);
            computer.addToTable2(drawnCard);
        } else {
            System.out.println("Destede kart kalmadÄ±!");
        }

        // Masadaki kartlarÄ± karÅŸÄ±laÅŸtÄ±r
        //computer.compareTable(player);
    }


    private static boolean checkGameResult(Players player, Players computer) {
        if (player.totalScore == 3) {
            System.out.println("Oyuncu oyunu kazandÄ±!");
            return true;
        } else if (computer.totalScore2== 3) {
            System.out.println("Bilgisayar oyunu kazandÄ±!");
            return true;
        }
        return false;
    }
}
